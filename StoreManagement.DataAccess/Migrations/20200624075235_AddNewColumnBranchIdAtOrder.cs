using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace StoreManagement.DataAccess.Migrations
{
    public partial class AddNewColumnBranchIdAtOrder : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddColumn<int>(
                name: "BranchId",
                table: "Orders",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 222, 227, 154, 107, 199, 50, 234, 43, 96, 171, 85, 175, 119, 2, 121, 8, 66, 115, 143, 43, 104, 69, 47, 228, 223, 171, 36, 29, 172, 119, 44, 88, 230, 65, 84, 12, 103, 132, 254, 151, 4, 227, 20, 111, 44, 51, 178, 150, 12, 122, 171, 243, 79, 33, 201, 25, 74, 142, 57, 119, 255, 59, 182, 67 }, new byte[] { 139, 168, 69, 31, 212, 15, 74, 213, 141, 235, 40, 100, 74, 14, 206, 210, 69, 94, 23, 122, 82, 44, 172, 15, 133, 195, 89, 216, 96, 61, 243, 231, 102, 179, 38, 141, 26, 83, 15, 15, 74, 24, 107, 22, 95, 206, 103, 212, 198, 207, 243, 165, 160, 156, 77, 249, 134, 150, 17, 74, 40, 38, 242, 156, 70, 182, 0, 153, 206, 89, 118, 66, 128, 113, 141, 110, 16, 72, 215, 235, 206, 232, 247, 144, 30, 36, 184, 232, 192, 67, 81, 110, 142, 73, 124, 48, 182, 59, 117, 158, 12, 203, 159, 135, 218, 46, 131, 99, 163, 172, 22, 15, 190, 61, 26, 196, 39, 18, 11, 56, 226, 33, 23, 147, 81, 249, 196, 36 } });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropColumn(
                name: "BranchId",
                table: "Orders");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 12, 38, 171, 162, 60, 130, 207, 142, 131, 173, 64, 4, 188, 126, 248, 157, 106, 144, 33, 110, 234, 132, 251, 223, 237, 249, 22, 192, 34, 24, 147, 115, 168, 57, 48, 245, 17, 58, 115, 198, 199, 168, 100, 251, 64, 198, 99, 7, 77, 248, 58, 177, 88, 238, 82, 155, 154, 25, 117, 209, 250, 235, 111, 77 }, new byte[] { 251, 250, 127, 86, 240, 206, 36, 46, 122, 0, 228, 97, 198, 41, 59, 39, 203, 168, 20, 89, 35, 242, 212, 32, 204, 154, 84, 209, 191, 233, 177, 26, 224, 192, 170, 146, 242, 178, 27, 52, 225, 188, 250, 127, 117, 144, 102, 51, 207, 153, 89, 103, 183, 181, 179, 129, 3, 101, 29, 207, 236, 39, 94, 166, 239, 174, 116, 136, 10, 197, 119, 241, 221, 248, 236, 152, 66, 240, 214, 172, 44, 214, 151, 5, 80, 95, 229, 218, 143, 250, 229, 63, 222, 144, 244, 182, 131, 76, 138, 21, 76, 155, 151, 83, 239, 180, 60, 76, 209, 218, 234, 46, 210, 76, 47, 177, 96, 113, 98, 96, 85, 53, 254, 106, 243, 116, 147, 164 } });
        }
    }
}
